import os, sys
import serial
import time
import serial
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BOARD)

# use right 4, 5 pins
# TXD0 / GPIO 14
# RXD0 / GPIO 15

unlockMaster1=[0x50, 0x06, 0x00, 0x69, 0xB5, 0x88, 0x22, 0xA1];
accCalmode1=[0x50, 0x06, 0x00, 0x01, 0x00, 0x01, 0x14, 0x4B];
magCalmode1=[0x50, 0x06, 0x00, 0x01, 0x00, 0x07, 0x94, 0x49];
setNormal1=[0x50, 0x06, 0x00, 0x01, 0x00, 0x00, 0xD5, 0x8B];
saveConfig1=[0x50, 0x06, 0x00, 0x00, 0x00, 0x00, 0x84, 0x4B];
readAngle1= [0x50, 0x03, 0x00, 0x3d, 0x00, 0x03, 0x99, 0x86];
readAcc1= [0x50, 0x03, 0x00, 0x34, 0x00, 0x03, 0x49, 0x84];
readAngVel1= [0x50, 0x03, 0x00, 0x37, 0x00, 0x03, 0xB9, 0x84];

unlockMaster2=[0x51, 0x06, 0x00, 0x69, 0xB5, 0x88, 0x23, 0x70];
accCalmode2=[0x51, 0x06, 0x00, 0x01, 0x00, 0x01, 0x15, 0x9A];
magCalmode2=[0x51, 0x06, 0x00, 0x01, 0x00, 0x01, 0x15, 0x9A];
setNormal2=[0x51, 0x06, 0x00, 0x01, 0x00, 0x00, 0xD4, 0x5A];
saveConfig2=[0x51, 0x06, 0x00, 0x00, 0x00, 0x00, 0x85, 0x9A];
readAngle2= [0x51, 0x03, 0x00, 0x3D, 0x00, 0x03, 0x98, 0x57];
readAcc2= [0x51, 0x03, 0x00, 0x34, 0x00, 0x03, 0x48, 0x55];
readAngVel2= [0x51, 0x03, 0x00, 0x37, 0x00, 0x03, 0xB8, 0x55];

rs485 = serial.Serial(
    port = '/dev/serial0',
    baudrate = 9600, 
    parity=serial.PARITY_NONE,
    stopbits=serial.STOPBITS_ONE,
    bytesize=serial.EIGHTBITS,
    timeout=1)

def calibrate():
    rs485.write(bytes(bytearray(unlockMaster1)))
    time.sleep(0.5)
    rs485.write(bytes(bytearray(unlockMaster1)))
    time.sleep(5)
    rs485.write(bytes(bytearray(unlockMaster1)))
    time.sleep(1)
    rs485.write(bytes(bytearray(unlockMaster1)))

    #read trash buffer
    while True:
        line = rs485.read(100)
        if len(line) == 0:
                break;

        hex_list = ["{:x}".format(ord(c)) for c in line];
        print(' '.join(hex_list))

def readACC():
    rs485.write(bytes(bytearray(readAcc1)))
    time.sleep(0.05)
    acceleration = rs485.read(11)
    hex_list = ["{:x}".format(ord(c)) for c in acceleration];
    print(' '.join(hex_list))
    rs485.flush()
